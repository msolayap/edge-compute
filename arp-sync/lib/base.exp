
set warn_msg "WARN: This is just stub for %s. override this in respective device class."


proc init_vars {} {
	uplevel {
		set prompt "(%|#|\\\$|>) *$"
		set send_human {.1 .3 1 .05 2}
		set send_slow {2 .001}
		# specific to this piece
		set vendor_detected 0
		set device_vendor "unknown"
		log_user 0 
	}
}

proc login_to_device {hostname user password} {

	global login_success prompt

	if {[catch {spawn ssh $user@$hostname} err ]} {
		puts stderr "ERROR: Failed to login to device\nError: $err" 
		return 1;
	} 
# We will leave the session open for further functions to interact
	uplevel set spawn_id $spawn_id 
	set login_success 1

	expect {
		-re "assword: *$" {
			send "$password\r" ;
			exp_continue ;
		}
		-re $prompt {}
	}
	return 0;
}

proc init_terminal {} {
	global prompt
	send -h "\r" ;
	expect {
		-re $prompt {
			send "\r" ;
		}
	}
	return 0;
}

proc detect_device_vendor {} {

	global vendor_detected prompt ;

	set d_vendor "unknown" ;
	set vendor_detected 0 ;

	send -s  "\r" ;
	expect {
		-re $prompt {
			if {$vendor_detected == 0} {
				send "show version\r" ;
				expect {
					-re "(ptx1000|JUNOS)" {
						set d_vendor "Juniper"
						expect -re $prompt {}
					}
					-re "(Nokia)" {
						set d_vendor "Nokia"
						expect -re $prompt {}
					}
					-re "\(more\)" {
						send -s  "\r" ;
						exp_continue ;
					}

				}
				incr vendor_detected 1 
			}
		}
	}
	return $d_vendor ;
}

proc get_arp_entries { {arp_filter ""} } {
	global warn_msg ;

	set _proc_name [lindex [info level 1 ] 0 ]
	dputs [format $warn_msg $_proc_name ]

}

proc parse_arp_entry {}  {
	global warn_msg ;

	set _proc_name [lindex [info level 1 ] 0 ]
	dputs [format $warn_msg $_proc_name ]
}

proc prepare_set_arp_cmd {params} {
	global warn_msg ;

	set _proc_name [lindex [info level 1 ] 0 ]
	dputs [format $warn_msg $_proc_name ]

}

proc ping_target {target params} {

	global warn_msg ;

	set _proc_name [lindex [info level 1 ] 0 ]
	dputs [format $warn_msg $_proc_name ]
}

proc device_logout {} { 
	global warn_msg ;

	set _proc_name [lindex [info level 1 ] 0 ]
	dputs [format $warn_msg $_proc_name ]
}
