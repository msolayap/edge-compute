

set arp_out {
MAC Address       Address         Name                      Interface               Flags
a0:f3:e4:2f:e2:0c 4.68.56.33      4.68.56.33                et-0/0/0:0.4000         permanent
0c:a4:02:a6:a1:44 10.69.172.1     10.69.172.1               ae3.3501                none
20:d8:0b:76:a7:46 11.31.31.22     11.31.31.22               ae2.52                  none
00:f:29:54:09:2a 100.80.16.2     kyle.iplab.level3.net     em0.0                   none
00:e0:81:32:c2:28 100.80.16.3     kenny.iplab.level3.net    em0.0                   none
00:0b:cd:42:4a:ed 100.80.16.5     rancid.iplab.level3.net   em0.0                   none
00:e0:81:33:39:46 100.80.16.24    crapgame.iplab.level3.net em0.0                   none
00:1c:c4:94:a5:10 100.80.16.32    jimbo.iplab.level3.net    em0.0                   none
1c:9c:8c:da:95:00 100.80.16.37    acx5448-1.iplab.level3.ne em0.0                   none
1c:9c:8c:da:9d:00 100.80.16.38    acx5448-2.iplab.level3.ne em0.0                   none
56:68:29:7:97:dc 100.80.16.100                             em0.0                   none
00:a0:a5:80:fc:43 100.80.16.128   jmx240-2.iplab.level3.net em0.0                   none
00:30:48:8e:95: 100.80.16.247   100.80.16.247             em0.0                   none
00:00:5e:00:01:01 100.80.16.254   100.80.16.254                                     none
fe:54:00:1c:95:51 128.0.0.16      fpc0                      bme0.0                  none
                  172.18.11.1     172.18.11.1               ae100.11                permanent
52:54:00:c2:12:11 192.168.1.1     192.168.1.1               em1.32768               none
Total entries: 17

rancid@jptx1000-2.EDGE>

}


	proc is_arp_line_valid {arp_line} {
		set is_valid 1;

		eval set arp_line_fields [list $arp_line ]
		set field_count [llength $arp_line_fields] ;

# Empty line check
		if { [regexp "^$" $arp_line] } { 
			set is_valid 0 ;

		} elseif { $field_count < 5 } {

# is the entry contains all the fields i.e IP MAC EXPIRY Type, Interface
# sometimes MAC may be missing. This check is for that.
			set is_valid 0 ;
		} elseif { ! [regexp  "^(\[0-9A-Za-z]{2}\:){5}" [lindex $arp_line_fields 0] ] } {

# is the line starting with valid IP address
			set is_valid 0;
		}

		return $is_valid 
	}

	foreach line [split $arp_out "\n"]  {

		puts $line ;
		set result [is_arp_line_valid $line]
		if { $result } { 
			puts "Previous Line Valid" ;
		} else  {
			puts "Previous Line Invalid" ;
		}
	}
